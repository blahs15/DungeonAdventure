public class EtcCode
   {
   /**
   public void setAtt( int att )
      {
      super.setAtt( att );
      } // end method
   public void setMagicAtt( int magAtt )
      {
      super.setMagicAtt( magAtt );
      } // end method
   public void setDef( int def )
      {
      super.setDef( def );
      } // end method
   public void setMagicDef( int magDef )
      {
      super.setMagicDef( magDef );
      } // end method
   public void setSpd( int spd )
      {
      super.setSpd( spd );
      } // end method
   public void setEvasion( int evasion )
      {
      super.setEvasion( evasion );
      } // end method
   public void setAccuracy( int acc )
      {
      super.setAccuracy( acc );
      } // end method
   public void setMaxHP( int maxHP )
      {
      super.setMaxHP( maxHP );
      } // end method
   public void setHP( int HP )
      {
      super.setHP( HP );
      } // end method
   public void setMaxSP( int maxSP )
      {
      super.setMaxSP( maxSP );
      } // end method
   public void setSP( int SP )
      {
      super.setSP( SP );
      } // end method
   */

      
     /**int compareTo( String other )
       * returns >, =, or < 
       * positive is >
       * negative is <
       * zero is ==
       * alphabetical order
       */
   /** int compareTo( Object other )
    * compare objects
    * write your own comparison
    */
      
   /**
    * 
   int attRandNum = 0;
   int magicAttRandNum = 1;
   int defRandNum = 2;
   int magicDefRandNum = 3;
   int spdRandNum = 4;
   int evasionRandNum = 5; // not in use yet
   int accuracyRandNum = 6; // not in use yet
   int maxHPRandNum = 7;
   int maxSPRandNum = 8;
   // for random number assignments?
    */
   
   /**
      else if( gridRand ==  )
         {
         grid[0][0] = "
         grid[0][1] = "
         grid[0][2] = "
         grid[0][3] = "
         grid[0][4] = "
         grid[0][5] = "
         grid[0][6] = "
         grid[0][7] = "
         grid[0][8] = "
         grid[0][9] = "
         grid[1][0] = "
         grid[1][1] = "
         grid[1][2] = "
         grid[1][3] = "
         grid[1][4] = "
         grid[1][5] = "
         grid[1][6] = "
         grid[1][7] = "
         grid[1][8] = "
         grid[1][9] = "
         grid[2][0] = "
         grid[2][1] = "
         grid[2][2] = "
         grid[2][3] = "
         grid[2][4] = "
         grid[2][5] = "
         grid[2][6] = "
         grid[2][7] = "
         grid[2][8] = "
         grid[2][9] = "
         grid[3][0] = "
         grid[3][1] = "
         grid[3][2] = "
         grid[3][3] = "
         grid[3][4] = "
         grid[3][5] = "
         grid[3][6] = "
         grid[3][7] = "
         grid[3][8] = "
         grid[3][9] = "
         grid[4][0] = "
         grid[4][1] = "
         grid[4][2] = "
         grid[4][3] = "
         grid[4][4] = "
         grid[4][5] = "
         grid[4][6] = "
         grid[4][7] = "
         grid[4][8] = "
         grid[4][9] = "
         grid[5][0] = "
         grid[5][1] = "
         grid[5][2] = "
         grid[5][3] = "
         grid[5][4] = "
         grid[5][5] = "
         grid[5][6] = "
         grid[5][7] = "
         grid[5][8] = "
         grid[5][9] = "
         grid[6][0] = "
         grid[6][1] = "
         grid[6][2] = "
         grid[6][3] = "
         grid[6][4] = "
         grid[6][5] = "
         grid[6][6] = "
         grid[6][7] = "
         grid[6][8] = "
         grid[6][9] = "
         grid[7][0] = "
         grid[7][1] = "
         grid[7][2] = "
         grid[7][3] = "
         grid[7][4] = "
         grid[7][5] = "
         grid[7][6] = "
         grid[7][7] = "
         grid[7][8] = "
         grid[7][9] = "
         grid[8][0] = "
         grid[8][1] = "
         grid[8][2] = "
         grid[8][3] = "
         grid[8][4] = "
         grid[8][5] = "
         grid[8][6] = "
         grid[8][7] = "
         grid[8][8] = "
         grid[8][9] = "
         grid[9][0] = "
         grid[9][1] = "
         grid[9][2] = "
         grid[9][3] = "
         grid[9][4] = "
         grid[9][5] = "
         grid[9][6] = "
         grid[9][7] = "
         grid[9][8] = "
         grid[9][9] = "
      } // end if
      */
      
   /**
public class Battle
   {
   private int attackerAtt;
   private int attackerDef;
   private int attackerMagicAtt;
   private int attackerMagicDef;
   private int attackerSpd;
   private int attackerAccuracy; // not in use yet
   private int attackerEvasion; // not in use yet
   private int defenderAtt;
   private int defenderDef;
   private int defenderMagicAtt;
   private int defenderMagicDef;
   private int defenderSpd;
   private int defenderAccuracy; // not in use yet
   private int defenderEvasion; // not in use yet
   
   //private int dmg; do i need this?
   //private int bonuses;
   private int finalDmg;
   private boolean heroTurn;
   private boolean inBattle;
   
   
   // get hero and Monster Objects
   // get hero and Monster Stats
   
   // create image of battle
   
   // check spd for who goes first
   // options for attack ( hero.getMoves() ) ??
   // monster attack
   // deal damage
   // keep going until one character's hp is less than 1
   
   // gain experience
   // Check if lvled
   // close battle screen
   // remove monster from grid
   
   private void switchAttacker()
      {
      int tempAtt = attackerAtt;
      int tempDef = attackerDef;
      int tempMagAtt = attackerMagicAtt;
      int tempMagDef = attackerMagicDef;
      int tempSpd = attackerSpd;
      int tempAcc = attackerAccuracy;
      int tempEva = attackerEvasion;
      attackerAtt = defenderAtt;
      attackerDef = defenderDef;
      attackerMagicAtt = defenderMagicAtt;
      attackerMagicDef = defenderMagicDef;
      attackerSpd = defenderSpd;
      attackerAccuracy = defenderAccuracy;
      attackerEvasion = defenderEvasion;
      defenderAtt = tempAtt;
      defenderDef = tempDef;
      defenderMagicAtt = tempMagAtt;
      defenderMagicDef = tempMagDef;
      defenderSpd = tempSpd;
      defenderAccuracy = tempAcc;
      defenderEvasion = tempEva;
      
      heroTurn = !heroTurn;
      } // end method switchAttacker
      
   
   } // end class Battle
   */
   } // end class EtcCode